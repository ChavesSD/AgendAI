/**
 * Script para validar o formul√°rio de empresa e garantir que os dados sejam salvos corretamente
 */

(function() {
    console.log('üß™ Iniciando valida√ß√£o do formul√°rio de empresa...');
    
    // Fun√ß√£o para verificar todos os elementos do formul√°rio
    function validarFormulario() {
        console.log('üîç Verificando elementos do formul√°rio...');
        
        const elementosRequeridos = [
            'companyName',
            'companyCNPJ',
            'companyEmail',
            'companyPhone',
            'companyAddress',
            'companyCity',
            'companyState',
            'companyZip',
            'companyStatus',
            'companyCategory'
        ];
        
        let todosElementosPresentes = true;
        
        // Verificar se cada elemento existe no DOM
        elementosRequeridos.forEach(id => {
            const elemento = document.getElementById(id);
            if (!elemento) {
                console.error(`‚ùå Elemento #${id} n√£o encontrado no formul√°rio!`);
                todosElementosPresentes = false;
            } else {
                console.log(`‚úÖ Elemento #${id} encontrado`);
            }
        });
        
        if (!todosElementosPresentes) {
            console.error('‚ùå Alguns elementos do formul√°rio est√£o faltando!');
            return false;
        }
        
        console.log('‚úÖ Todos os elementos do formul√°rio est√£o presentes!');
        return true;
    }
    
    // Fun√ß√£o para conectar ao bot√£o de salvar
    function conectarBotaoSalvar() {
        console.log('üîå Conectando ao bot√£o de salvar...');
        
        const botaoSalvar = document.getElementById('saveCompanyBtn');
        if (!botaoSalvar) {
            console.error('‚ùå Bot√£o de salvar n√£o encontrado!');
            return false;
        }
        
        console.log('‚úÖ Bot√£o de salvar encontrado. Adicionando ouvinte de eventos...');
        
        // Remover eventos anteriores para evitar duplica√ß√£o
        const novoBotao = botaoSalvar.cloneNode(true);
        botaoSalvar.parentNode.replaceChild(novoBotao, botaoSalvar);
        
        // Adicionar novo ouvinte de eventos
        novoBotao.addEventListener('click', function() {
            console.log('üñ±Ô∏è Bot√£o de salvar clicado! Coletando dados do formul√°rio...');
            salvarEmpresaManualmente();
        });
        
        console.log('‚úÖ Ouvinte de eventos adicionado ao bot√£o de salvar!');
        return true;
    }
    
    // Fun√ß√£o para capturar e salvar dados do formul√°rio manualmente
    function salvarEmpresaManualmente() {
        const form = document.getElementById('companyForm');
        
        if (!form) {
            console.error('‚ùå Formul√°rio n√£o encontrado!');
            return false;
        }
        
        if (!form.checkValidity()) {
            console.error('‚ùå Formul√°rio inv√°lido! Verificando campos...');
            
            // Destacar campos com erro
            form.classList.add('was-validated');
            
            // Verificar quais campos est√£o com erro
            const campos = form.querySelectorAll('input, select');
            campos.forEach(campo => {
                if (!campo.validity.valid) {
                    console.error(`‚ùå Campo ${campo.id} inv√°lido: ${campo.validationMessage}`);
                }
            });
            
            return false;
        }
        
        console.log('‚úÖ Formul√°rio v√°lido! Capturando dados...');
        
        try {
            // Capturar dados do formul√°rio
            const empresaData = {
                id: form.hasAttribute('data-company-id') ? parseInt(form.getAttribute('data-company-id')) : Date.now(),
                name: document.getElementById('companyName').value,
                cnpj: document.getElementById('companyCNPJ').value,
                email: document.getElementById('companyEmail').value,
                phone: document.getElementById('companyPhone').value,
                address: document.getElementById('companyAddress').value,
                city: document.getElementById('companyCity').value,
                state: document.getElementById('companyState').value,
                zip: document.getElementById('companyZip').value,
                status: document.getElementById('companyStatus').value,
                category: document.getElementById('companyCategory').value
            };
            
            // Adicionar data de cria√ß√£o para novas empresas
            if (!empresaData.createdAt) {
                const dataAtual = new Date();
                const dia = String(dataAtual.getDate()).padStart(2, '0');
                const mes = String(dataAtual.getMonth() + 1).padStart(2, '0');
                const ano = dataAtual.getFullYear();
                empresaData.createdAt = `${dia}/${mes}/${ano}`;
            }
            
            console.log('üìä Dados da empresa capturados:', empresaData);
            
            // Usar fun√ß√£o global para salvar empresa (se dispon√≠vel)
            if (typeof window.salvarEmpresaDiretamente === 'function') {
                console.log('üîÑ Usando fun√ß√£o global para salvar empresa...');
                const resultado = window.salvarEmpresaDiretamente(empresaData);
                
                if (resultado) {
                    console.log('‚úÖ Empresa salva com sucesso!');
                    
                    // Fechar o modal
                    const modal = document.getElementById('addCompanyModal');
                    if (modal && typeof bootstrap !== 'undefined' && bootstrap.Modal) {
                        const bsModal = bootstrap.Modal.getInstance(modal);
                        if (bsModal) bsModal.hide();
                    }
                    
                    return true;
                } else {
                    console.error('‚ùå Erro ao salvar empresa!');
                    return false;
                }
            } else {
                console.error('‚ùå Fun√ß√£o global salvarEmpresaDiretamente n√£o encontrada!');
                
                // Implementar m√©todo alternativo de salvamento
                console.log('üîÑ Usando m√©todo alternativo para salvar empresa...');
                
                // Recuperar empresas existentes
                let empresas = [];
                try {
                    const empresasJSON = localStorage.getItem('agendai_companies');
                    if (empresasJSON) {
                        empresas = JSON.parse(empresasJSON);
                        if (!Array.isArray(empresas)) {
                            empresas = [];
                        }
                    }
                } catch (e) {
                    console.error('Erro ao recuperar empresas:', e);
                    empresas = [];
                }
                
                // Verificar se √© atualiza√ß√£o ou nova empresa
                const index = empresas.findIndex(e => e.id === empresaData.id);
                if (index >= 0) {
                    // Atualizar empresa existente
                    empresas[index] = empresaData;
                } else {
                    // Adicionar nova empresa
                    empresas.push(empresaData);
                }
                
                // Salvar no localStorage
                localStorage.setItem('agendai_companies', JSON.stringify(empresas));
                
                // Atualizar vari√°vel global
                window.companies = empresas;
                
                console.log('‚úÖ Empresa salva com sucesso (m√©todo alternativo)!');
                
                // Fechar o modal
                const modal = document.getElementById('addCompanyModal');
                if (modal && typeof bootstrap !== 'undefined' && bootstrap.Modal) {
                    const bsModal = bootstrap.Modal.getInstance(modal);
                    if (bsModal) bsModal.hide();
                }
                
                // For√ßar atualiza√ß√£o da tabela
                if (typeof window.carregarEExibirEmpresas === 'function') {
                    console.log('üîÑ Atualizando tabela...');
                    window.carregarEExibirEmpresas();
                }
                
                alert('Empresa salva com sucesso!');
                return true;
            }
        } catch (erro) {
            console.error('‚ùå Erro ao salvar empresa:', erro);
            alert('Erro ao salvar empresa: ' + erro.message);
            return false;
        }
    }
    
    // Executar verifica√ß√£o ap√≥s pequeno delay para garantir que o DOM esteja carregado
    setTimeout(function() {
        validarFormulario();
        conectarBotaoSalvar();
    }, 1000);
    
    // Executar ap√≥s mudan√ßa de URL (navega√ß√£o SPA)
    window.addEventListener('hashchange', function() {
        if (window.location.hash.includes('/admin/companies')) {
            setTimeout(function() {
                validarFormulario();
                conectarBotaoSalvar();
            }, 500);
        }
    });
    
    console.log('‚úÖ Script de valida√ß√£o do formul√°rio de empresa inicializado com sucesso!');
})(); 